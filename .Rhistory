document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
get_identity <- function(token){
url = sprintf("%s/oauth/identity", BASE_URL)
return(content(get(url, config(token = token))))
}
token <- "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB"
#'  token = NA
#')
#'
#'@param url
#'@param token
#'
#'@details
#'This function is not supposed to used directly, but is used through other functions
#'
#'@examples
get <- function(url, token=NA){
if (length(token) == 0 || suppressWarnings(is.na(token))){
Sys.sleep(60 / 25)
response <- httr::GET(url)
} else {
Sys.sleep(1)
response <- httr::GET(url, config(token = token))
}
return(response)
}
get_identity(token)
BASE_URL <- "https://api.discogs.com"
get_identity(token)
library(discogsAPI)
get_identity("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
library(discogsAPI)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
rm(list=c("BASE_URL", "get", "get_identity"))
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
get_identity("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
#'  token = NA
#')
#'
#'@param url
#'@param token
#'
#'@details
#'This function is not supposed to used directly, but is used through other functions
#'
#'@examples
get <- function(url, token=NA){
if (length(token) == 0 || suppressWarnings(is.na(token))){
Sys.sleep(60 / 25)
response <- httr::GET(url)
} else if (typeof(token) == 'character'){
Sys.sleep(1)
response <- httr::GET(paste0(url, "&token=", token))
}
else {
Sys.sleep(1)
response <- httr::GET(url, config(token = token))
}
return(response)
}
get_identity("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
#'  token = NA
#')
#'
#'@param url
#'@param token
#'
#'@details
#'This function is not supposed to used directly, but is used through other functions
#'
#'@examples
get <- function(url, token=NA){
if (length(token) == 0 || suppressWarnings(is.na(token))){
Sys.sleep(60 / 25)
response <- httr::GET(url)
} else if (typeof(token) == 'character'){
Sys.sleep(1)
print("check")
response <- httr::GET(paste0(url, "&token=", token))
}
else {
Sys.sleep(1)
response <- httr::GET(url, config(token = token))
}
return(response)
}
get_identity("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
rm(list = c("get"))
document()
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
get_identity("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
typeof("asd a")
typeof("asd a") == "character"
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
get_identity("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
get_release(1, "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
length("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB") == 0
is.na("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
get_identity("SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
get_identity(token = "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
get_identity(token = "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
library("devtools")
library(roxygen2)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
get_identity(token = "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
key <- "tOPxZAqfnnwaRMwtVnvS"
secret <- "cwARlOjMeNcKWEGRPEjvBUafrFPFhEiy"
token <- authorize(key, secret)
get_identity(token)
get_identity(token = "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB")
a <- "https://api.discogs.com/oauth/identity"
library(httr)
library(jsonlite)
token <- "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB"
httr::GET(paste0(a, "&token=", token))
a <- "https://api.discogs.com/releases/1"
token <- "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB"
httr::GET(paste0(a, "&token=", token))
a <- "https://api.discogs.com/release/1"
httr::GET(paste0(a, "&token=", token))
url <- paste0(a, "&token=", token)
url
a <- "https://api.discogs.com/releases/1"
library(httr)
library(jsonlite)
token <- "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB"
url <- paste0(a, "&token=", token)
url
httr::GET(url)
a <- "https://api.discogs.com/database/search?q=Nirvana"
token <- "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB"
url <- paste0(a, "&token=", token)
url
httr::GET(url)
a <- "https://api.discogs.com/releases/1"
library(httr)
library(jsonlite)
token <- "SPwOiHIQgcFEhlFUxoFwbmYhUWgiIvKbLfsoRMcB"
url <- paste0(a, "&token=", token)
url
httr::GET(url)
token <- "QPnxgSWQlELaGRGjiSRFMppdcpEjpjwOAFqIsEyY"
url <- paste0(a, "&token=", token)
url
httr::GET(url)
httr::GET(a, add_headers(Authorization = token))
key <- "tOPxZAqfnnwaRMwtVnvS"
secret <- "cwARlOjMeNcKWEGRPEjvBUafrFPFhEiy"
token <- authorize(key, secret)
httr::GET(a, add_headers(Authorization = token))
a <- "https://api.discogs.com/oath/identity"
library(httr)
library(jsonlite)
token <- "QPnxgSWQlELaGRGjiSRFMppdcpEjpjwOAFqIsEyY"
httr::GET(a, add_headers(Authorization = token))
a <- "https://api.discogs.com/oauth/identity"
token <- "QPnxgSWQlELaGRGjiSRFMppdcpEjpjwOAFqIsEyY"
httr::GET(a, add_headers(Authorization = token))
b <- httr::GET(a, add_headers(Authorization = token))
b
headers(b)
content(b)
a <- "https://api.discogs.com/oauth/identity"
library(httr)
library(jsonlite)
token <- "QPnxgSWQlELaGRGjiSRFMppdcpEjpjwOAFqIsEyY"
b <- httr::GET(a, add_headers(Authorization = token))
content(b)
a <- "https://api.discogs.com/identity"
library(httr)
library(jsonlite)
token <- "QPnxgSWQlELaGRGjiSRFMppdcpEjpjwOAFqIsEyY"
b <- httr::GET(a, add_headers(Authorization = token))
content(b)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
library("devtools")
library(roxygen2)
setwd("DiscogsAPI/")
document()
setwd("..")
install("discogsAPI")
library(discogsAPI)
devtools::install_github("Pascallio/discogsAPI")
devtools::install_github("Pascallio/discogsAPI")
library(discogsAPI)
a<-get_release(1)
a$id
setwd("..")
library("devtools")
library(roxygen2)
document()
library(devtools)
library(roxygen2)
library(usethis)
setwd("~/ImmunoMet/ImmunoMet")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter",
"shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "GO.db", "yaml", "plyr", "AnnotationDbi")
sapply(packages, usethis::use_package)
load_all()
library(devtools)
library(roxygen2)
library(usethis)
setwd("~/ImmunoMet/ImmunoMet")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter",
"shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "GO.db", "yaml", "plyr", "AnnotationDbi")
sapply(packages, usethis::use_package)
load_all()
rcmdcheck::rcmdcheck()
setwd("~/ImmunoMet")
devtools::install("ImmunoMet", upgrade = "never")
#devtools::install_github(repo = "vanhasseltlab/ImmuneMetAtlas", auth_token = "745f3796c07ee277ce332f2c155ff955a64093aa")
remove.packages("immuno")
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
library(devtools)
library(roxygen2)
library(usethis)
setwd("~/ImmunoMet/ImmunoMet")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter",
"shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "GO.db", "yaml", "plyr", "AnnotationDbi")
sapply(packages, usethis::use_package)
load_all()
rm("graph")
load_all()
document()
setwd("~/ImmunoMet")
devtools::install("ImmunoMet", upgrade = "never")
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
library(devtools)
library(roxygen2)
library(usethis)
setwd("~/ImmunoMet/ImmunoMet")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter",
"shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "GO.db", "yaml", "plyr", "AnnotationDbi")
invisible(sapply(packages, usethis::use_package))
load_all()
rm("graph")
load_all()
#rcmdcheck::rcmdcheck()
document()
#setwd("~/ImmunoMet")
devtools::install(upgrade = "never")
devtools::install(upgrade = "never")
library(devtools)
library(roxygen2)
library(usethis)
setwd("~/ImmunoMet/ImmunoMet")
usethis::use_description()
usethis::use_description_defaults()
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter",
"shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "GO.db", "yaml", "plyr", "AnnotationDbi")
invisible(sapply(packages, usethis::use_package))
load_all()
#rcmdcheck::rcmdcheck()
document()
devtools::install(upgrade = "never")
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
library(devtools)
library(roxygen2)
library(usethis)
setwd("~/ImmunoMet/ImmunoMet")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter",
"shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "GO.db", "yaml", "plyr", "AnnotationDbi")
invisible(sapply(packages, usethis::use_package))
devtools::load_all()
#rcmdcheck::rcmdcheck()
devtools::document()
devtools::install(upgrade = "never")
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
setwd("~/ImmunoMet/ImmunoMet")
devtools::load_all()
setwd("~/ImmunoMet/ImmunoMet")
devtools::load_all()
library(devtools)
library(roxygen2)
library(usethis)
setwd("~/ImmunoMet/ImmunoMet")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter",
"shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "GO.db", "yaml", "plyr", "AnnotationDbi")
invisible(sapply(packages, usethis::use_package))
setwd("~/ImmunoMet/ImmunoMet")
devtools::load_all()
#rcmdcheck::rcmdcheck()
devtools::document()
devtools::install(upgrade = "never")
library(devtools)
library(roxygen2)
library(usethis)
setwd("~/ImmunoMet/ImmunoMet")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter",
"shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "GO.db", "yaml", "plyr", "AnnotationDbi")
invisible(sapply(packages, usethis::use_package))
setwd("~/ImmunoMet/ImmunoMet")
devtools::load_all()
#rcmdcheck::rcmdcheck()
devtools::document()
devtools::install(upgrade = "never")
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
devtools::install_github(repo = "vanhasseltlab/ImmuneMetAtlas", auth_token = "745f3796c07ee277ce332f2c155ff955a64093aa")
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
#rcmdcheck::rcmdcheck()
devtools::document()
setwd("~/ImmunoMet/ImmunoMet")
devtools::load_all()
rm("graph")
#rcmdcheck::rcmdcheck()
devtools::document()
#rcmdcheck::rcmdcheck()
devtools::document()
#rcmdcheck::rcmdcheck()
devtools::document()
rcmdcheck::rcmdcheck()
library(devtools)
library(roxygen2)
library(usethis)
setwd("~/ImmunoMet/ImmunoMet")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter", "AnnotationDbi",
"shinydashboard", "htmlwidgets", "heatmaply", "DT", "yaml",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table",
"formattable", "gtools", "ggplot2", "GO.db", "plyr")
invisible(sapply(packages, usethis::use_package))
setwd("~/ImmunoMet/ImmunoMet")
devtools::load_all()
#rcmdcheck::rcmdcheck()
devtools::document()
rcmdcheck::rcmdcheck()
usethis::use_mit_license("Pascal Maas")
rcmdcheck::rcmdcheck()
library(devtools)
library(roxygen2)
library(usethis)
setwd("~/ImmunoMet/ImmunoMet")
usethis::use_description()
usethis::use_mit_license("Pascal Maas")
packages <- c("shiny", "igraph", "colourpicker", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter", "AnnotationDbi",
"shinydashboard", "htmlwidgets", "heatmaply", "DT", "yaml",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table",
"formattable", "gtools", "ggplot2", "GO.db", "plyr")
invisible(sapply(packages, usethis::use_package))
setwd("~/ImmunoMet/ImmunoMet")
devtools::load_all()
rcmdcheck::rcmdcheck()
library(devtools)
library(roxygen2)
library(usethis)
setwd("~/ImmunoMet/ImmunoMet")
usethis::use_description()
usethis::use_mit_license("Pascal Maas")
packages <- c("shiny", "igraph", "colourpicker", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter", "AnnotationDbi",
"shinydashboard", "htmlwidgets", "heatmaply", "DT", "yaml",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table",
"formattable", "gtools", "ggplot2", "GO.db", "plyr")
invisible(sapply(packages, usethis::use_package))
setwd("~/ImmunoMet/ImmunoMet")
devtools::load_all()
rcmdcheck::rcmdcheck()
library(devtools)
library(roxygen2)
library(usethis)
setwd("~/ImmunoMet/ImmunoMet")
usethis::use_description()
usethis::use_mit_license("Pascal Maas")
packages <- c("shiny", "igraph", "colourpicker", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter", "AnnotationDbi",
"shinydashboard", "htmlwidgets", "heatmaply", "DT", "yaml",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table",
"formattable", "gtools", "ggplot2", "GO.db", "plyr")
invisible(sapply(packages, usethis::use_package))
setwd("~/ImmunoMet/ImmunoMet")
devtools::load_all()
rcmdcheck::rcmdcheck()
library(devtools)
library(roxygen2)
library(usethis)
setwd("~/ImmunoMet/ImmunoMet")
usethis::use_description()
usethis::use_mit_license("Pascal Maas")
packages <- c("shiny", "igraph", "colourpicker", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter", "AnnotationDbi",
"shinydashboard", "htmlwidgets", "heatmaply", "DT", "yaml",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table",
"formattable", "gtools", "ggplot2", "GO.db", "plyr")
invisible(sapply(packages, usethis::use_package))
setwd("~/ImmunoMet/ImmunoMet")
devtools::load_all()
rcmdcheck::rcmdcheck()
library(devtools)
library(roxygen2)
library(usethis)
setwd("~/ImmunoMet/ImmunoMet")
usethis::use_description()
usethis::use_mit_license("Pascal Maas")
packages <- c("shiny", "igraph", "colourpicker", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter", "AnnotationDbi",
"shinydashboard", "htmlwidgets", "heatmaply", "DT", "yaml",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table",
"formattable", "gtools", "ggplot2", "GO.db", "plyr")
invisible(sapply(packages, usethis::use_package))
setwd("~/ImmunoMet/ImmunoMet")
devtools::load_all()
devtools::document()
rcmdcheck::rcmdcheck()
