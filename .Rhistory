load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
plot(example_graph())
to_plotly(example_graph())
document()
library(devtools)
library(roxygen2)
setwd("~/ImmunoMet/immuno")
usethis::use_description()
sapply(packages, usethis::use_package)
packages <- c("shiny", "igraph", "colourpicker", "jsonlite", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter", "markdown", "rmarkdown",
"knitr", "shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "crosstalk", "viridis",
"parallel", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "network", "GO.db", "intergraph", "GGally", "showtext",
"sna", "gdata", "ggrepel", "yaml", "plyr", "tidyr", "shinyTree")
sapply(packages, usethis::use_package)
document()
document()
document()
warnings()
warnings()
rlang::last_error()
document()
rlang::last_error()
warnings()
library(devtools)
library(roxygen2)
setwd("~/ImmunoMet/immuno")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "jsonlite", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter", "markdown", "rmarkdown",
"knitr", "shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "crosstalk", "viridis",
"parallel", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "network", "GO.db", "intergraph", "GGally", "showtext",
"sna", "gdata", "ggrepel", "yaml", "plyr", "tidyr", "shinyTree")
sapply(packages, usethis::use_package)
document()
warnings()
rcmdcheck::rcmdcheck()
rcmdcheck::rcmdcheck()
rcmdcheck::rcmdcheck()
packages <- c("shiny", "igraph", "colourpicker", "jsonlite", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter", "markdown", "rmarkdown",
"knitr", "shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "crosstalk", "viridis",
"parallel", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "network", "GO.db", "intergraph", "GGally", "showtext",
"sna", "gdata", "ggrepel", "yaml", "plyr", "tidyr", "shinyTree", "AnnotationDbi")
sapply(packages, usethis::use_package)
rcmdcheck::rcmdcheck()
document()
document()
library(devtools)
library(roxygen2)
setwd("~/ImmunoMet/immuno")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "jsonlite", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter", "markdown", "rmarkdown",
"knitr", "shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "crosstalk", "viridis",
"parallel", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "network", "GO.db", "intergraph", "GGally", "showtext",
"sna", "gdata", "ggrepel", "yaml", "plyr", "tidyr", "shinyTree", "AnnotationDbi")
sapply(packages, usethis::use_package)
document()
devtools::load_all()
document()
rlang::last_error()
document()
update.packages()
update.packages()
library(devtools)
library(roxygen2)
setwd("~/ImmunoMet/immuno")
usethis::use_description()
document()
roxygenise()
roxygenise()
roxygenise()
rlang::last_error()
rlang::last_trace()
?add_class_metadata()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
document()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
document()
setwd("~/ImmunoMet/immuno")
document()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(ImmunoMet)
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
ImmunoMet::load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
detach("package:ImmunoMet", unload=TRUE)
install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(devtools)
library(roxygen2)
setwd("~/ImmunoMet/immuno")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "jsonlite", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter", "markdown", "rmarkdown",
"knitr", "shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "crosstalk", "viridis",
"parallel", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "network", "GO.db", "intergraph", "GGally", "showtext",
"sna", "gdata", "ggrepel", "yaml", "plyr", "tidyr", "shinyTree", "AnnotationDbi")
sapply(packages, usethis::use_package)
document()
rcmdcheck::rcmdcheck()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
#devtools::install_github( auth_token = "745f3796c07ee277ce332f2c155ff955a64093aa")
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
detach("package:ImmunoMet", unload=TRUE)
install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
#devtools::install_github( auth_token = "745f3796c07ee277ce332f2c155ff955a64093aa")
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
detach("package:ImmunoMet", unload=TRUE)
install_local("immuno", upgrade = "never", force = T, dependencies = FALSE, quiet = TRUE)
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
install_local("immuno", upgrade = "never", force = T, dependencies = FALSE, quiet = TRUE)
detach("package:ImmunoMet", unload=TRUE)
devtools::install_github("vanhasseltlab/ImmuneMetAtlas", auth_token = "745f3796c07ee277ce332f2c155ff955a64093aa")
#devtools::install_github( )
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
setwd("~/ImmunoMet/immuno")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "jsonlite", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter", "markdown", "rmarkdown",
"knitr", "shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "crosstalk", "viridis",
"parallel", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "network", "GO.db", "intergraph", "GGally", "showtext",
"sna", "gdata", "ggrepel", "yaml", "plyr", "tidyr", "shinyTree", "AnnotationDbi")
sapply(packages, usethis::use_package)
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
install_local("immuno", upgrade = "never", force = T, dependencies = FALSE, quiet = TRUE)
library(ImmunoMet)
#devtools::install_github("vanhasseltlab/ImmuneMetAtlas", auth_token = "745f3796c07ee277ce332f2c155ff955a64093aa")
warnings()
document()
setwd("~/ImmunoMet/immuno")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "jsonlite", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter", "markdown", "rmarkdown",
"knitr", "shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "crosstalk", "viridis",
"parallel", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "network", "GO.db", "intergraph", "GGally", "showtext",
"sna", "gdata", "ggrepel", "yaml", "plyr", "tidyr", "shinyTree", "AnnotationDbi")
sapply(packages, usethis::use_package)
document()
rcmdcheck::rcmdcheck()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(ImmunoMet)
warnings()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
document()
library(devtools)
library(roxygen2)
setwd("~/ImmunoMet/immuno")
usethis::use_description()
sapply(packages, usethis::use_package)
document()
document()
setwd("~/ImmunoMet/immuno")
document()
document()
?coalesce
?identical
?actionButton
library(devtools)
library(roxygen2)
setwd("~/ImmunoMet/immuno")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "jsonlite", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter", "markdown", "rmarkdown",
"knitr", "shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "crosstalk", "viridis",
"parallel", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "network", "GO.db", "intergraph", "GGally", "showtext",
"sna", "gdata", "ggrepel", "yaml", "plyr", "tidyr", "shinyTree", "AnnotationDbi")
sapply(packages, usethis::use_package)
document()
rcmdcheck::rcmdcheck()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
setwd("~/ImmunoMet/immuno")
detach("package:ImmunoMet", unload=TRUE)
install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(devtools)
library(roxygen2)
install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
setwd("~/ImmunoMet/immuno")
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
?intersect
?all_of
#'@title Convert interaction dataframe to iGraph object
#'@usage to_graph(
#'    df
#')
#'@param df Dataframe of interactions between nodes
#'@examples
#'
?layout.fruchterman.reingold
library(devtools)
library(roxygen2)
setwd("~/ImmunoMet/immuno")
usethis::use_description()
sapply(packages, usethis::use_package)
packages <- c("shiny", "igraph", "colourpicker", "jsonlite", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter", "markdown", "rmarkdown",
"knitr", "shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "crosstalk", "viridis",
"parallel", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "network", "GO.db", "intergraph", "GGally", "showtext",
"sna", "gdata", "ggrepel", "yaml", "plyr", "tidyr", "shinyTree", "AnnotationDbi")
sapply(packages, usethis::use_package)
document()
document()
library(igraph)
df <- graph_from_data_frame(data.frame(a = c(1, 2, 2), b = c(3, 2, 4)))
df
igraph::V(df)$name <- igraph::V(df)$id
V(df)$name <- igraph::V(df)$id
igraph::V(df)$id <- igraph::V(df)$name
?aes_string
#'
#'
#'@importFrom ggplot2 ggplot geom_point aes_string
?theme_minimal
onRender?
#'@title Convert graph object to an interactive Plotly
#'@usage igraph_to_plotly2(
#'    g
#')
#'@param g iGraph object obtained from to_graph() or get_graph()
#'@examples
#'@importFrom ploty ggplotly layout config
to_plotly <- function(g){
ax <- list(title = "", zeroline = FALSE, showline = FALSE, showticklabels = FALSE,
showgrid = FALSE, autorange = TRUE
)
df <- igraph::as_data_frame(g, what = "vertices")
p <- ggplotly(to_gg_plot(g, df),  width = 1600, tooltip = c("text")) %>%
plotly::layout(showlegend = T, xaxis = ax, yaxis = ax) %>%
plotly::config(scrollZoom = TRUE, toImageButtonOptions = list(format = "svg"),
displaylogo = F, editable = F, modeBarButtonsToRemove =
list("lasso2d", "hoverCompareCartesian",
"hoverClosestCartesian", "toggleSpikelines")) %>%
onRender("function(el) { el.on('plotly_click', function(d) {
Shiny.setInputValue('click_id', d.points[0].customdata) });}")
p$x$layout$shapes <- isolate(get_edge_shapes(g, df[,c("x", "y")]))
for (i in 1:length(p$x$data)){
p$x$data[[i]]$marker$color <- "#232F34"
p$x$data[[i]]$mode <- paste0(p$x$data[[i]]$mode, "+markers")
}
return(p)
}
?onRender
?fisher.test
?duplicated
?startsWith
?combinations
?rbind.fill
?updateTabItems
?reorder
?spin_flower
?eval
?parse
?HTML
?showNotification
library(devtools)
library(roxygen2)
setwd("~/ImmunoMet/immuno")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "jsonlite", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter", "markdown", "rmarkdown",
"knitr", "shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "crosstalk", "viridis",
"parallel", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "network", "GO.db", "intergraph", "GGally", "showtext",
"sna", "gdata", "ggrepel", "yaml", "plyr", "tidyr", "shinyTree", "AnnotationDbi")
sapply(packages, usethis::use_package)
document()
rcmdcheck::rcmdcheck()
document()
rcmdcheck::rcmdcheck()
??showtext
?showtext
??igraph
?igraph
library(devtools)
library(roxygen2)
setwd("~/ImmunoMet/immuno")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "jsonlite", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter",
"shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "GO.db", "yaml", "plyr", "AnnotationDbi")
sapply(packages, usethis::use_package)
document()
document()
warnings()
document()
setwd("~/ImmunoMet/immuno")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "jsonlite", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter",
"shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "GO.db", "yaml", "plyr", "AnnotationDbi")
sapply(packages, usethis::use_package)
document()
rcmdcheck::rcmdcheck()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
detach("package:ImmunoMet", unload=TRUE)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(devtools)
library(roxygen2)
setwd("~/ImmunoMet/immuno")
usethis::use_description()
packages <- c("shiny", "igraph", "colourpicker", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter",
"shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "GO.db", "yaml", "plyr", "AnnotationDbi")
sapply(packages, usethis::use_package)
document()
setwd("~/ImmunoMet")
detach("package:ImmunoMet", unload=TRUE)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
detach("package:immuno", unload = T)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
library(ImmunoMet)
#install_github(repo = "vanhasseltlab/ImmuneMetAtlas",
#               auth_token = "745f3796c07ee277ce332f2c155ff955a64093aa")
warnings()
setwd("~/ImmunoMet/immuno")
usethis::use_description()
document()
rcmdcheck::rcmdcheck()
packages <- c("shiny", "igraph", "colourpicker", "httr", "dplyr",
"shinythemes", "shinycssloaders", "waiter",
"shinydashboard", "htmlwidgets", "heatmaply", "DT",
"RColorBrewer", "shinyalert", "plotly", "shinyjs", "data.table", "formattable", "gtools",
"ggplot2", "GO.db", "yaml", "plyr", "AnnotationDbi")
sapply(packages, usethis::use_package)
document()
rcmdcheck::rcmdcheck()
setwd("~/ImmunoMet")
detach("package:immuno", unload = T)
detach("package:ImmunoMet", unload=TRUE)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
detach("package:immuno", unload = T)
detach("package:ImmunoMet", unload=TRUE)
devtools::install_local("ImmunoMet", upgrade = "never", force = T, dependencies = FALSE)
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
#install_github(repo = "vanhasseltlab/ImmuneMetAtlas",
#               auth_token = "745f3796c07ee277ce332f2c155ff955a64093aa")
library(immuno)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
#library(ImmunoMet)
uninstall("immuno")
#library(ImmunoMet)
devtools::uninstall("immuno")
setwd("~/ImmunoMet/immuno")
setwd("~/ImmunoMet")
#library(ImmunoMet)
devtools::uninstall("immuno")
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = FALSE)
#install_github(repo = "vanhasseltlab/ImmuneMetAtlas",
#               auth_token = "745f3796c07ee277ce332f2c155ff955a64093aa")
library(immuno)
#install_github(repo = "vanhasseltlab/ImmuneMetAtlas",
#               auth_token = "745f3796c07ee277ce332f2c155ff955a64093aa")
library(immuno)
require(immuno)
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = TRUE)
#library(ImmunoMet)
devtools::uninstall("immuno")
devtools::install_local("immuno", upgrade = "never", force = T, dependencies = TRUE)
library(immuno)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
#library(ImmunoMet)
devtools::uninstall("immuno")
#library(ImmunoMet)
devtools::uninstall("ImmunoMet")
setwd("~/ImmunoMet")
#library(ImmunoMet)
devtools::uninstall("ImmunoMet")
remove.packages("immuno")
remove.packages("ImmuneMet")
remove.packages("ImmunoMet")
remove.packages("immuno")
install_github(repo = "vanhasseltlab/ImmuneMetAtlas", auth_token = "745f3796c07ee277ce332f2c155ff955a64093aa")
devtools::install_github(repo = "vanhasseltlab/ImmuneMetAtlas", auth_token = "745f3796c07ee277ce332f2c155ff955a64093aa")
library(ImmunoMet)
load_data("C:/Users/Pascal/Documents/ImmuneMetAtlas/App/config.yaml")
run_shiny()
